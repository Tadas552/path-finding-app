{"version":3,"sources":["constants/index.js","components/Square.js","actions/index.js","components/Board.js","components/GeneratePannel.js","components/UIStatesComponent.js","components/WelcomeModal.js","App.js","serviceWorker.js","BFS/Location.js","BFS/index.js","reducers/index.js","store/index.js","middleWare/index.js","index.js"],"names":["GENERATE_BOARD","SET_TO_CLEAR","FIND_PATH","SquareComp","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","x","y","squareType","handleClick","bind","assertThisInitialized","handleMouse","setState","props","filling","setToClear","e","buttons","squareColor","react_default","a","createElement","onMouseOver","onMouseDown","className","React","Component","Square","connect","dispatch","coords","type","payload","Board","grid","_ref","rows","map","r","key","components_Square","GeneratePannelComp","cols","handleChange","handleGenerate","handlePathFinding","defineProperty","target","name","value","preventDefault","generateBoard","generatePath","Form","FormGroup","row","Col","md","style","margin","Label","htmlFor","Input","onChange","Button","color","onClick","GeneratePannel","dimensions","UIStatesComponent","Container","Row","sm","WelcomeModal","modal","toggle","prevState","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","App","components_WelcomeModal","components_GeneratePannel","components_Board","UIStatesComponent_UIStatesComponent","Boolean","window","location","hostname","match","Location","Parent","isValid","xBounds","yBounds","backtrace","endNode","path","push","pop","findPath","neigbour","start","startX","startY","endX","endY","Q","visited","Array","fill","i","j","getVisitedGrid","col","length","current","shift","initialState","Math","floor","random","locked","initializePoint","update","$set","store","createStore","arguments","undefined","action","parseInt","newStartX","newStartY","newEndX","newEndY","assign","alert","square","applyMiddleware","next","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ecffded.chunk.js","sourcesContent":["export const GENERATE_BOARD = \"GENERATE_BOARD\";\nexport const SET_TO_CLEAR = \"SET_TO_CLEAR\";\nexport const FIND_PATH = \"FIND_PATH\";","import React from 'react'\nimport {connect} from \"react-redux\"\nimport {setToClear} from \"../actions/index\"\n\nclass SquareComp extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            x:\"\",\n            y:\"\",\n            squareType: \"\"\n        }\n        this.handleClick = this.handleClick.bind(this);\n        this.handleMouse = this.handleMouse.bind(this);\n    }\n    componentDidMount(){\n        this.setState(\n            {\n                squareType:this.props.filling.squareType,\n                x:this.props.x,\n                y:this.props.y\n            });\n    }\n\n    componentDidUpdate() {\n        if(this.state.squareType !== this.props.filling.squareType) {\n            this.setState({\n                squareType:this.props.filling.squareType\n            })\n        }\n    }\n\n    handleClick() {\n        this.props.setToClear({x:this.state.x, y:this.state.y, squareType:this.state.squareType});\n    }\n\n    handleMouse(e) {\n        if(e.buttons === 1 || e.buttons === 3){ \n            this.props.setToClear({x:this.state.x, y:this.state.y, squareType:this.state.squareType});\n        }\n    }\n\n    render() {\n        var squareColor = \"square square-\";\n        switch(this.props.filling.squareType) {\n            case \"filled\":\n                squareColor += \"filled\";\n                break;\n            case \"clear\":\n                squareColor += \"clear\";\n                break;\n            case \"start\": \n                squareColor += \"start\";\n                break;\n            case \"end\":\n                squareColor  += \"end\";\n                break;\n            case \"path\":\n                squareColor += \"path\";\n                break;\n            default:\n                squareColor += \"default\";\n                break;\n        }\n        return (\n            <td onMouseOver={this.handleMouse} onMouseDown={this.handleClick} className={squareColor}>\n                <div className=\"square-inside\">\n                </div> \n            </td>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setToClear: coords => dispatch(setToClear(coords))\n    }\n}\n\nconst Square = connect(null, mapDispatchToProps)(SquareComp);\n\nexport default Square;\n","\nimport {GENERATE_BOARD, SET_TO_CLEAR, FIND_PATH} from \"../constants/index.js\"\n\nexport function generateBoard(payload) {\n    return {\n        type:GENERATE_BOARD,\n        payload:payload\n    }\n}\n\nexport function setToClear(payload) {\n    return {\n        type:SET_TO_CLEAR,\n        payload:payload\n    }\n}\n\nexport function generatePath() {\n    return {\n        type:FIND_PATH\n    }\n}","import React from 'react'\nimport Square from \"./Square\"\nimport \"./Square.css\"\nimport \"./Board.css\"\nimport {connect} from \"react-redux\";\n\n\nconst BoardComp = ({grid}) =>  {\n    const rows = grid.map((r, y) => {return (\n        <tr key={\"row_\"+y}>\n            {r.map((r,x) => {return (\n                <Square key={\"col_\"+x} filling={r} x={x} y={y}/>\n            )})}\n        </tr>\n    )})\n\n    return (\n        <div>\n            <table className=\"table\">\n                <tbody>\n                    {rows}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\n\nconst mapStateToProps = state =>{\n    return {grid:state.grid};\n}\n\nconst Board = connect(mapStateToProps)(BoardComp);\n\nexport default Board;","import React from 'react'\nimport \"./GeneratePannel.css\"\nimport {generateBoard, generatePath} from \"../actions\"\nimport {connect} from \"react-redux\";\nimport {Label, Input, Form, FormGroup, Button, Col} from \"reactstrap\";\n\n\nclass GeneratePannelComp extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            rows:10,\n            cols:10\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleGenerate = this.handleGenerate.bind(this);\n        this.handlePathFinding = this.handlePathFinding.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({[e.target.name]:e.target.value});\n    }\n\n    handleGenerate(e) {\n        e.preventDefault();\n        const {rows} = this.state;\n        const {cols} = this.state;\n        this.props.generateBoard({x:rows, y:cols});\n    }\n    \n    handlePathFinding() {\n        this.props.generatePath();\n    }\n\n    render() {\n    return (\n        <div className=\"pannel\">\n        <Form>\n            <FormGroup row>\n                <Col md={6} style={{margin:\"auto\"}}>\n                    <Label htmlFor=\"rows\">Rows:\n                        <Input type=\"text\" name=\"rows\" value={this.state.rows} onChange={this.handleChange}></Input>\n                    </Label>\n                    <Label htmlFor=\"columns\">Columns:\n                        <Input type=\"text\" name=\"cols\" value={this.state.cols} onChange={this.handleChange}></Input>\n                    </Label>\n                </Col>\n            </FormGroup>\n            <FormGroup>\n                <Col md={6} style={{margin:\"auto\"}}>\n                    <Button style={{margin:\"5px\"}} color=\"primary\" type=\"submit\" onClick={this.handleGenerate}>Generate</Button>\n                    <Button style={{margin:\"5px\"}} color=\"primary\" onClick={this.handlePathFinding}>Find Path</Button>  \n                </Col>\n            </FormGroup>          \n        </Form>\n        </div>\n    )}\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        generateBoard: dimensions => dispatch(generateBoard(dimensions)),\n        generatePath: () => dispatch(generatePath())\n    };\n}\n\nconst GeneratePannel = connect(null, mapDispatchToProps)(GeneratePannelComp);\n\nexport default GeneratePannel;\n","import React from 'react';\nimport {Container,Col, Row} from \"reactstrap\";\nimport \"./UIStatesComponent.css\";\n\nexport default function UIStatesComponent() {\n    return (\n        <Container className=\"w-50 container\">\n            <p>UI States</p>\n            <Row>\n                <Col sm={6} md={2}>\n                    <label>Filled\n                        <div className=\"box box-filled\"></div>                    \n                    </label>\n                </Col>\n                <Col sm={6} md={2}>\n                    <label>Hover\n                        <div className=\"box box-hover\"></div>                    \n                    </label>\n                </Col>\n                <Col sm={6} md={2}>\n                    <label>Down\n                        <div className=\"box box-down\"></div>                    \n                    </label>\n                </Col>\n                <Col sm={6} md={2}>\n                    <label>Clear\n                        <div className=\"box box-clear\"></div>                    \n                    </label>\n                </Col>\n                <Col sm={6}  md={2}>\n                    <label>Start\n                        <div className=\"box box-start\"></div>                    \n                    </label>\n                </Col>\n                <Col sm={6} md={2}>\n                    <label>End\n                        <div className=\"box box-end\"></div>                    \n                    </label>\n                </Col>\n                <Col sm={6}  md={2}>\n                    <label>Shortest Path\n                        <div className=\"box box-shortest\"></div>                    \n                    </label>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass WelcomeModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: true,\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n        <ModalHeader toggle={this.toggle}>Path Finding App</ModalHeader>\r\n            <ModalBody>\r\n              <ul>\r\n                <li>\r\n                Start Point and End Point cells positions are generated randomly.\r\n                </li>\r\n                <li>\r\n                  Click and drag on a clear cells to make walls.\r\n                </li>\r\n                <li>\r\n                  To change Start Point, End Point positions or dimensions of the board press \"Generate\" button.\r\n                </li>\r\n                <li>\r\n                  To find path press \"Find Path\" button.\r\n                </li>\r\n              </ul>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={this.toggle}>Close</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WelcomeModal;","import React from 'react';\nimport Board from \"./components/Board\"\nimport GeneratePannel from \"./components/GeneratePannel\"\nimport UIStatesComponent from \"./components/UIStatesComponent\"\nimport WelcomeModal from \"./components/WelcomeModal\";\nimport \"./App.css\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WelcomeModal/>\n      <GeneratePannel/>\n      <Board/>\n      <UIStatesComponent/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","function Location(coords) {\r\n    this.x = coords.x;\r\n    this.y = coords.y;\r\n    this.Parent = null;\r\n}\r\n\r\nexport default Location;","import Location from \"./Location\";\r\n\r\nconst isValid = (x,y, xBounds, yBounds) => {\r\n    return (y >= 0) && (y < yBounds) && \r\n    (x >= 0) && (x < xBounds); \r\n}\r\n\r\nconst getVisitedGrid = (xBounds, yBounds, grid) => {\r\n    var visited = Array(yBounds).fill(0).map(x => Array(xBounds).fill(false));\r\n\r\n    for(var i = 0; i < yBounds; i++) {\r\n        for(var j = 0; j<xBounds; j++) {\r\n            if(grid[i][j].squareType === \"filled\") {\r\n                visited[i][j] = true;\r\n            }\r\n        }\r\n    }\r\n    \r\n    return visited;\r\n}\r\n\r\nconst backtrace = (endNode) => {\r\n    var path = [];\r\n    path.push({x:endNode.x, y:endNode.y});\r\n    while(endNode.Parent) {\r\n        endNode = endNode.Parent;\r\n        path.push({x:endNode.x, y:endNode.y});\r\n    }\r\n    path.pop();\r\n    return path;\r\n}\r\n\r\nconst findPath = (state) => {\r\n    var neigbour;\r\n    var start = new Location({x: state.startX, y: state.startY});\r\n    var target = new Location({x:state.endX, y:state.endY});\r\n    var Q = [];\r\n    Q.push(start);\r\n\r\n    const visited = getVisitedGrid(state.col, state.row, state.grid);\r\n    visited[start.y][start.x] = true;\r\n\r\n    while(Q.length) {\r\n        var current = Q.shift();\r\n        \r\n        if(current.x === target.x && current.y === target.y) {\r\n            return backtrace(current.Parent);   \r\n        }\r\n\r\n        if(isValid(current.x, current.y+1, state.row, state.row) && visited[current.y + 1][current.x] === false) {\r\n            neigbour = new Location({x:current.x, y:current.y+1});\r\n            neigbour.Parent = current;\r\n            Q.push(neigbour);\r\n            visited[current.y+1][current.x] = true;\r\n        }\r\n        if(isValid(current.x, current.y-1, state.row, state.row) && visited[current.y - 1][current.x] === false) {\r\n            neigbour = new Location({x:current.x, y:current.y-1});\r\n            neigbour.Parent = current;\r\n            Q.push(neigbour);\r\n            visited[current.y-1][current.x] = true;\r\n        }\r\n        if(isValid(current.x+1, current.y, state.row, state.row) && visited[current.y][current.x+1] === false) {\r\n            neigbour = new Location({x:current.x+1, y:current.y});\r\n            neigbour.Parent = current;\r\n            Q.push(neigbour);\r\n            visited[current.y][current.x+1] = true;\r\n        }\r\n        if(isValid(current.x-1, current.y, state.row, state.row) && visited[current.y][current.x-1] === false) {\r\n            neigbour = new Location({x:current.x-1, y:current.y});\r\n            neigbour.Parent = current;\r\n            Q.push(neigbour);\r\n            visited[current.y][current.x-1] = true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport default findPath;","import {GENERATE_BOARD, SET_TO_CLEAR, FIND_PATH} from \"../constants/index\"\nimport update from \"immutability-helper\";\nimport findPath from \"../BFS/index\"\n\nconst initialState = {\n    grid: Array(10).fill(0).map(x => Array(10).fill({squareType:\"clear\"})),\n    startX : Math.floor(Math.random() * 4),\n    startY : Math.floor(Math.random() * 10),\n    endX : Math.floor(Math.random() * 4) + 4,\n    endY : Math.floor(Math.random() * 10),\n    row: 10,\n    col: 10,\n    locked:false\n}\nexport function rootReducer(state = initialState, action) {\n    state = initializePoint(state, state.startX, state.startY, \"start\");\n    state = initializePoint(state, state.endX, state.endY, \"end\");\n    switch(action.type) {\n        case GENERATE_BOARD:\n            const rows = parseInt(action.payload.x);\n            const cols = parseInt(action.payload.y);\n            const newStartX = Math.floor(Math.random() * parseInt(cols/2)); \n            const newStartY = Math.floor(Math.random() * rows);\n            const newEndX = Math.floor(Math.random() * parseInt(cols/2)) + parseInt(cols/2);\n            const newEndY = Math.floor(Math.random() * rows);\n            state = Object.assign({}, state, {grid: Array(rows).fill(0).map(x => Array(cols).fill({squareType:\"clear\"})),\n                                            startX:newStartX,\n                                            startY:newStartY,\n                                            endY:newEndY,\n                                            endX:newEndX,\n                                            col:cols,\n                                            row:rows,})\n\n            state = initializePoint(state, state.startX, state.startY, \"start\");\n            state = initializePoint(state, state.endX, state.endY, \"end\");\n            state = Object.assign({}, state, {locked:false});\n            return state;\n        case SET_TO_CLEAR:\n            if(state.locked === false) {\n                const x = action.payload.x;\n                const y = action.payload.y;\n                var type = \"clear\";\n                if(action.payload.squareType === \"clear\") {\n                    type = \"filled\";\n                }\n                state = initializePoint(state, x, y, type);\n            }\n            return state;\n        case FIND_PATH:\n        if(state.locked === false) {\n            var path = findPath(state);\n            if(path === false) {\n                alert(\"Impossible to find path\");    \n                return state;\n            }\n\n            for(var i = 0; i<path.length; i++) {\n                var square = path[i];\n                state = initializePoint(state, square.x, square.y, \"path\");\n            }\n            state = Object.assign({}, state, {locked:true});\n        }\n            return state;\n        default:\n            return state;\n    }\n}\n\nfunction initializePoint(state, x,y,type) {\n    return update(state,\n        {grid: \n            {[y]:\n                {[x]: \n                    {\n                        $set: {squareType:type} \n                    }\n                }}});\n}","import {createStore, applyMiddleware} from \"redux\";\nimport {rootReducer} from \"../reducers/index\"\nimport {checkGenerateOptions} from \"../middleWare\"\n\nconst store = createStore(rootReducer, applyMiddleware(checkGenerateOptions));\n\nexport default store;","import {GENERATE_BOARD, SET_TO_CLEAR} from \"../constants\"\n\nexport function checkGenerateOptions({dispatch}) {\n    return function(next) {\n        return function(action) {\n            if(action.type === GENERATE_BOARD) {\n                if(action.payload.x > 20 || action.payload.y >20 || action.payload.y <= 0 || action.payload.x <= 0) {\n                    return;\n                }\n            }\n            if(action.type === SET_TO_CLEAR) {\n                if(action.payload.squareType === \"start\" || action.payload.squareType === \"end\" || action.payload.squareType === \"path\") {\n                    return;\n                } \n            }\n            return next(action);\n        }\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}